19:00:27.758 [info] Child {LoggerFileBackend, :general_log} of Supervisor Logger.Backends.Supervisor started
Pid: #PID<0.118.0>
Start Call: Logger.Backends.Watcher.start_link({{LoggerFileBackend, :general_log}, {LoggerFileBackend, :general_log}})
Restart: :transient
Shutdown: 5000
Type: :worker
19:00:27.758 [info] Child Logger.Backends.Supervisor of Supervisor Logger.Backends.Internal started
Pid: #PID<0.117.0>
Start Call: Logger.Backends.Supervisor.start_link([{LoggerFileBackend, :general_log}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
19:00:27.758 [info] Child Logger.Backends.Internal of Supervisor Logger.Supervisor started
Pid: #PID<0.113.0>
Start Call: Logger.Backends.Internal.start_link([])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
19:00:27.758 [info] Application logger started at :nonode@nohost
19:00:28.709 [info] Child :ttb_autostart of Supervisor :runtime_tools_sup started
Pid: #PID<0.1440.0>
Start Call: :ttb_autostart.start_link()
Restart: :temporary
Shutdown: 3000
Type: :worker
19:00:28.709 [info] Application runtime_tools started at :nonode@nohost
19:00:28.711 [info] Application erts started at :nonode@nohost
19:00:28.711 [info] Application lx_lexical_shared started at :nonode@nohost
19:00:28.712 [info] Child LXSnowflake.Generator of Supervisor #PID<0.1446.0> (Supervisor.Default) started
Pid: #PID<0.1447.0>
Start Call: LXSnowflake.Generator.start_link(1704070800000, 1)
Restart: :permanent
Shutdown: 5000
Type: :worker
19:00:28.712 [info] Application lx_snowflake started at :nonode@nohost
19:00:28.712 [info] Application lx_sourceror started at :nonode@nohost
19:00:28.712 [info] Application lx_common started at :nonode@nohost
19:00:28.712 [info] Application lx_elixir_sense started at :nonode@nohost
19:00:28.718 [info] Application jason started at :nonode@nohost
19:00:28.718 [info] Application logger_file_backend started at :nonode@nohost
19:00:28.718 [info] Application lx_path_glob started at :nonode@nohost
19:00:28.718 [info] Application lx_proto started at :nonode@nohost
19:00:28.718 [info] Application lx_protocol started at :nonode@nohost
19:00:28.728 [info] Child LXical.Document.Store of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1460.0>
Start Call: LXical.Document.Store.start_link([derive: [analysis: &LXical.Ast.analyze/1]])
Restart: :permanent
Shutdown: 5000
Type: :worker
19:00:28.731 [info] Child LXical.Server of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1461.0>
Start Call: LXical.Server.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
19:00:28.731 [info] Child LXical.Server.ProjectSupervisor of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1462.0>
Start Call: DynamicSupervisor.start_link([name: LXical.Server.ProjectSupervisor, strategy: :one_for_one])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
19:00:28.731 [info] Child LXical.Server.Provider.Queue.Supervisor of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1463.0>
Start Call: Task.Supervisor.start_link([name: LXical.Server.Provider.Queue.Supervisor])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
19:00:28.732 [info] Child LXical.Server.Provider.Queue of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1464.0>
Start Call: LXical.Server.Provider.Queue.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
19:00:28.732 [info] Child LXical.Server.Transport.StdIO of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1465.0>
Start Call: LXical.Server.Transport.StdIO.start_link(:standard_io, &LXical.Server.protocol_message/1)
Restart: :permanent
Shutdown: 5000
Type: :worker
19:00:28.732 [info] Application lx_server started at :nonode@nohost
19:00:28.743 [info] Starting project at uri file:///Users/zoedsoupe/dev/andromeda/andromeda-fie
19:00:28.757 [info] Child {LXical.Server.Project.Progress, "andromeda_fie"} of Supervisor :"andromeda_fie::supervisor" started
Pid: #PID<0.1467.0>
Start Call: LXical.Server.Project.Progress.start_link(%LXical.Project{root_uri: "file:///Users/zoedsoupe/dev/andromeda/andromeda-fie", mix_exs_uri: "file:///Users/zoedsoupe/dev/andromeda/andromeda-fie/mix.exs", mix_project?: true, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 47033, project_config: []})
Restart: :permanent
Shutdown: 5000
Type: :worker
19:00:28.760 [info] Child {LXical.RemoteControl.ProjectNodeSupervisor, "andromeda_fie"} of Supervisor :"andromeda_fie::supervisor" started
Pid: #PID<0.1468.0>
Start Call: LXical.RemoteControl.ProjectNodeSupervisor.start_link(%LXical.Project{root_uri: "file:///Users/zoedsoupe/dev/andromeda/andromeda-fie", mix_exs_uri: "file:///Users/zoedsoupe/dev/andromeda/andromeda-fie/mix.exs", mix_project?: true, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 47033, project_config: []})
Restart: :permanent
Shutdown: 5000
Type: :worker
19:00:28.770 [info] Child :erl_epmd of Supervisor :net_sup started
Pid: #PID<0.1471.0>
Start Call: :erl_epmd.start_link()
Restart: :permanent
Shutdown: 2000
Type: :worker
19:00:28.771 [info] Child :auth of Supervisor :net_sup started
Pid: #PID<0.1472.0>
Start Call: :auth.start_link()
Restart: :permanent
Shutdown: 2000
Type: :worker
19:00:28.773 [info] Child :net_kernel of Supervisor :net_sup started
Pid: #PID<0.1473.0>
Start Call: :net_kernel.start_link(%{name: :"manager-andromeda_fie-47033@127.0.0.1", supervisor: :net_sup_dynamic, net_tickintensity: 4, net_ticktime: 60, name_domain: :longnames, clean_halt: false})
Restart: :permanent
Shutdown: 2000
Type: :worker
19:00:28.773 [info] Child :net_sup_dynamic of Supervisor :kernel_sup started
Pid: #PID<0.1470.0>
Start Call: :erl_distribution.start_link(%{name: :"manager-andromeda_fie-47033@127.0.0.1", supervisor: :net_sup_dynamic, net_tickintensity: 4, net_ticktime: 60, name_domain: :longnames, clean_halt: false})
Restart: :permanent
Shutdown: 1000
Type: :supervisor
19:00:29.256 [info] Child {LXical.Server.Project.Node, "andromeda_fie"} of Supervisor :"andromeda_fie::supervisor" started
Pid: #PID<0.1469.0>
Start Call: LXical.Server.Project.Node.start_link(%LXical.Project{root_uri: "file:///Users/zoedsoupe/dev/andromeda/andromeda-fie", mix_exs_uri: "file:///Users/zoedsoupe/dev/andromeda/andromeda-fie/mix.exs", mix_project?: true, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 47033, project_config: []})
Restart: :permanent
Shutdown: 5000
Type: :worker
19:00:29.259 [info] Child {LXical.Server.Project.Diagnostics, "andromeda_fie"} of Supervisor :"andromeda_fie::supervisor" started
Pid: #PID<0.1481.0>
Start Call: LXical.Server.Project.Diagnostics.start_link(%LXical.Project{root_uri: "file:///Users/zoedsoupe/dev/andromeda/andromeda-fie", mix_exs_uri: "file:///Users/zoedsoupe/dev/andromeda/andromeda-fie/mix.exs", mix_project?: true, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 47033, project_config: []})
Restart: :permanent
Shutdown: 5000
Type: :worker
19:00:29.261 [info] Child {LXical.Server.Project.Intelligence, "andromeda_fie"} of Supervisor :"andromeda_fie::supervisor" started
Pid: #PID<0.1482.0>
Start Call: LXical.Server.Project.Intelligence.start_link(%LXical.Project{root_uri: "file:///Users/zoedsoupe/dev/andromeda/andromeda-fie", mix_exs_uri: "file:///Users/zoedsoupe/dev/andromeda/andromeda-fie/mix.exs", mix_project?: true, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 47033, project_config: []})
Restart: :permanent
Shutdown: 5000
Type: :worker
19:00:29.264 [info] Child LXical.Server.Project.SearchListener of Supervisor :"andromeda_fie::supervisor" started
Pid: #PID<0.1483.0>
Start Call: LXical.Server.Project.SearchListener.start_link(%LXical.Project{root_uri: "file:///Users/zoedsoupe/dev/andromeda/andromeda-fie", mix_exs_uri: "file:///Users/zoedsoupe/dev/andromeda/andromeda-fie/mix.exs", mix_project?: true, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 47033, project_config: []})
Restart: :permanent
Shutdown: 5000
Type: :worker
19:00:29.265 [info] Lexical Initialized
19:00:29.265 [info] opened file:///Users/zoedsoupe/dev/andromeda/andromeda-fie/test/support/conn_case.ex
19:00:31.679 [error] Shutting down
19:00:31.679 [warn] Received an Exit notification. Halting the server in 150ms
19:00:31.679 [info] Child :timer_server of Supervisor :kernel_sup started
Pid: #PID<0.1484.0>
Start Call: :timer.start_link()
Restart: :permanent
Shutdown: 1000
Type: :worker
19:00:31.681 [error] Child LXical.Server.Transport.StdIO of Supervisor LXical.Server.Supervisor terminated
** (exit) normal
Pid: #PID<0.1465.0>
Start Call: LXical.Server.Transport.StdIO.start_link(:standard_io, &LXical.Server.protocol_message/1)
Restart: :permanent
Shutdown: 5000
Type: :worker
19:00:31.681 [info] Child LXical.Server.Transport.StdIO of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1485.0>
Start Call: LXical.Server.Transport.StdIO.start_link(:standard_io, &LXical.Server.protocol_message/1)
Restart: :permanent
Shutdown: 5000
Type: :worker
19:00:31.682 [error] Child of Supervisor :standard_error_sup terminated
** (exit) :epipe
Pid: #PID<0.52.0>
Start Module: :standard_error
19:00:33.288 [info] Child {LoggerFileBackend, :general_log} of Supervisor Logger.Backends.Supervisor started
Pid: #PID<0.118.0>
Start Call: Logger.Backends.Watcher.start_link({{LoggerFileBackend, :general_log}, {LoggerFileBackend, :general_log}})
Restart: :transient
Shutdown: 5000
Type: :worker
19:00:33.288 [info] Child Logger.Backends.Supervisor of Supervisor Logger.Backends.Internal started
Pid: #PID<0.117.0>
Start Call: Logger.Backends.Supervisor.start_link([{LoggerFileBackend, :general_log}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
19:00:33.288 [info] Child Logger.Backends.Internal of Supervisor Logger.Supervisor started
Pid: #PID<0.113.0>
Start Call: Logger.Backends.Internal.start_link([])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
19:00:33.288 [info] Application logger started at :nonode@nohost
19:00:34.468 [info] Child :ttb_autostart of Supervisor :runtime_tools_sup started
Pid: #PID<0.1440.0>
Start Call: :ttb_autostart.start_link()
Restart: :temporary
Shutdown: 3000
Type: :worker
19:00:34.468 [info] Application runtime_tools started at :nonode@nohost
19:00:34.470 [info] Application erts started at :nonode@nohost
19:00:34.470 [info] Application lx_lexical_shared started at :nonode@nohost
19:00:34.471 [info] Child LXSnowflake.Generator of Supervisor #PID<0.1446.0> (Supervisor.Default) started
Pid: #PID<0.1447.0>
Start Call: LXSnowflake.Generator.start_link(1704070800000, 1)
Restart: :permanent
Shutdown: 5000
Type: :worker
19:00:34.471 [info] Application lx_snowflake started at :nonode@nohost
19:00:34.471 [info] Application lx_sourceror started at :nonode@nohost
19:00:34.471 [info] Application lx_common started at :nonode@nohost
19:00:34.471 [info] Application lx_elixir_sense started at :nonode@nohost
19:00:34.478 [info] Application jason started at :nonode@nohost
19:00:34.478 [info] Application logger_file_backend started at :nonode@nohost
19:00:34.478 [info] Application lx_path_glob started at :nonode@nohost
19:00:34.478 [info] Application lx_proto started at :nonode@nohost
19:00:34.478 [info] Application lx_protocol started at :nonode@nohost
19:00:34.490 [info] Child LXical.Document.Store of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1460.0>
Start Call: LXical.Document.Store.start_link([derive: [analysis: &LXical.Ast.analyze/1]])
Restart: :permanent
Shutdown: 5000
Type: :worker
19:00:34.492 [info] Child LXical.Server of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1461.0>
Start Call: LXical.Server.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
19:00:34.493 [info] Child LXical.Server.ProjectSupervisor of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1462.0>
Start Call: DynamicSupervisor.start_link([name: LXical.Server.ProjectSupervisor, strategy: :one_for_one])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
19:00:34.493 [info] Child LXical.Server.Provider.Queue.Supervisor of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1463.0>
Start Call: Task.Supervisor.start_link([name: LXical.Server.Provider.Queue.Supervisor])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
19:00:34.495 [info] Child LXical.Server.Provider.Queue of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1464.0>
Start Call: LXical.Server.Provider.Queue.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
19:00:34.495 [info] Child LXical.Server.Transport.StdIO of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1465.0>
Start Call: LXical.Server.Transport.StdIO.start_link(:standard_io, &LXical.Server.protocol_message/1)
Restart: :permanent
Shutdown: 5000
Type: :worker
19:00:34.495 [info] Application lx_server started at :nonode@nohost
19:00:34.507 [info] Starting project at uri file:///Users/zoedsoupe/dev/andromeda/andromeda-fie
19:00:34.522 [info] Child {LXical.Server.Project.Progress, "andromeda_fie"} of Supervisor :"andromeda_fie::supervisor" started
Pid: #PID<0.1467.0>
Start Call: LXical.Server.Project.Progress.start_link(%LXical.Project{root_uri: "file:///Users/zoedsoupe/dev/andromeda/andromeda-fie", mix_exs_uri: "file:///Users/zoedsoupe/dev/andromeda/andromeda-fie/mix.exs", mix_project?: true, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 14345, project_config: []})
Restart: :permanent
Shutdown: 5000
Type: :worker
19:00:34.526 [info] Child {LXical.RemoteControl.ProjectNodeSupervisor, "andromeda_fie"} of Supervisor :"andromeda_fie::supervisor" started
Pid: #PID<0.1468.0>
Start Call: LXical.RemoteControl.ProjectNodeSupervisor.start_link(%LXical.Project{root_uri: "file:///Users/zoedsoupe/dev/andromeda/andromeda-fie", mix_exs_uri: "file:///Users/zoedsoupe/dev/andromeda/andromeda-fie/mix.exs", mix_project?: true, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 14345, project_config: []})
Restart: :permanent
Shutdown: 5000
Type: :worker
19:00:34.538 [info] Child :erl_epmd of Supervisor :net_sup started
Pid: #PID<0.1471.0>
Start Call: :erl_epmd.start_link()
Restart: :permanent
Shutdown: 2000
Type: :worker
19:00:34.539 [info] Child :auth of Supervisor :net_sup started
Pid: #PID<0.1472.0>
Start Call: :auth.start_link()
Restart: :permanent
Shutdown: 2000
Type: :worker
19:00:34.542 [info] Child :net_kernel of Supervisor :net_sup started
Pid: #PID<0.1473.0>
Start Call: :net_kernel.start_link(%{name: :"manager-andromeda_fie-14345@127.0.0.1", supervisor: :net_sup_dynamic, net_tickintensity: 4, net_ticktime: 60, name_domain: :longnames, clean_halt: false})
Restart: :permanent
Shutdown: 2000
Type: :worker
19:00:34.542 [info] Child :net_sup_dynamic of Supervisor :kernel_sup started
Pid: #PID<0.1470.0>
Start Call: :erl_distribution.start_link(%{name: :"manager-andromeda_fie-14345@127.0.0.1", supervisor: :net_sup_dynamic, net_tickintensity: 4, net_ticktime: 60, name_domain: :longnames, clean_halt: false})
Restart: :permanent
Shutdown: 1000
Type: :supervisor
19:00:35.017 [info] Child {LXical.Server.Project.Node, "andromeda_fie"} of Supervisor :"andromeda_fie::supervisor" started
Pid: #PID<0.1469.0>
Start Call: LXical.Server.Project.Node.start_link(%LXical.Project{root_uri: "file:///Users/zoedsoupe/dev/andromeda/andromeda-fie", mix_exs_uri: "file:///Users/zoedsoupe/dev/andromeda/andromeda-fie/mix.exs", mix_project?: true, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 14345, project_config: []})
Restart: :permanent
Shutdown: 5000
Type: :worker
19:00:35.019 [info] Child {LXical.Server.Project.Diagnostics, "andromeda_fie"} of Supervisor :"andromeda_fie::supervisor" started
Pid: #PID<0.1481.0>
Start Call: LXical.Server.Project.Diagnostics.start_link(%LXical.Project{root_uri: "file:///Users/zoedsoupe/dev/andromeda/andromeda-fie", mix_exs_uri: "file:///Users/zoedsoupe/dev/andromeda/andromeda-fie/mix.exs", mix_project?: true, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 14345, project_config: []})
Restart: :permanent
Shutdown: 5000
Type: :worker
19:00:35.022 [info] Child {LXical.Server.Project.Intelligence, "andromeda_fie"} of Supervisor :"andromeda_fie::supervisor" started
Pid: #PID<0.1482.0>
Start Call: LXical.Server.Project.Intelligence.start_link(%LXical.Project{root_uri: "file:///Users/zoedsoupe/dev/andromeda/andromeda-fie", mix_exs_uri: "file:///Users/zoedsoupe/dev/andromeda/andromeda-fie/mix.exs", mix_project?: true, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 14345, project_config: []})
Restart: :permanent
Shutdown: 5000
Type: :worker
19:00:35.023 [info] Child LXical.Server.Project.SearchListener of Supervisor :"andromeda_fie::supervisor" started
Pid: #PID<0.1483.0>
Start Call: LXical.Server.Project.SearchListener.start_link(%LXical.Project{root_uri: "file:///Users/zoedsoupe/dev/andromeda/andromeda-fie", mix_exs_uri: "file:///Users/zoedsoupe/dev/andromeda/andromeda-fie/mix.exs", mix_project?: true, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 14345, project_config: []})
Restart: :permanent
Shutdown: 5000
Type: :worker
19:00:35.024 [info] Lexical Initialized
19:00:35.024 [info] opened file:///Users/zoedsoupe/dev/andromeda/andromeda-fie/test/support/data_case.ex
19:00:38.215 [info] Completion for LxPos<<39, 11>>
19:00:38.221 [info] Local completions are []
19:00:38.221 [info] Emitting completions: []
19:00:38.299 [info] Compiled andromeda_fie in 3.3 seconds
19:00:39.273 [info] Completion for LxPos<<39, 16>>
19:00:40.810 [info] Completion for LxPos<<39, 18>>
19:00:40.879 [info] Local completions are [%LXical.RemoteControl.Completion.Candidate.Behaviour{full_name: "Ecto.Adapter", metadata: %{}, name: "Adapter", summary: "Specifies the minimal API required from adapters.\n"}, %LXical.RemoteControl.Completion.Candidate.Module{full_name: "Ecto.Adapters", metadata: %{}, name: "Adapters", summary: ""}]
19:00:40.895 [info] Emitting completions: [#Protocol.Types.Completion.Item<[label: "Adapter", kind: :module, detail: "Specifies the minimal API required from adapters.\n", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/Users/zoedsoupe/dev/andromeda/andromeda-fie/test/support/data_case.ex", version: 16, dirty?: true, lines: %Lines<"defmodule Andromeda.DataCase do..."(59 lines)>, ...>, edits: %LXical.Document.Edit{text: "Adapter", range: LxRange[<<39, 16>>...<<39, 18>>]}}, sort_text: "0001_Adapter"]>, #Protocol.Types.Completion.Item<[label: "Adapters", kind: :module, detail: "Ecto.Adapters", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/Users/zoedsoupe/dev/andromeda/andromeda-fie/test/support/data_case.ex", version: 16, dirty?: true, lines: %Lines<"defmodule Andromeda.DataCase do..."(59 lines)>, ...>, edits: %LXical.Document.Edit{text: "Adapters", range: LxRange[<<39, 16>>...<<39, 18>>]}}, sort_text: "0001_Adapters"]>]
19:00:40.922 [info] Local completions are [%LXical.RemoteControl.Completion.Candidate.Behaviour{full_name: "Ecto.Adapter", metadata: %{}, name: "Adapter", summary: "Specifies the minimal API required from adapters.\n"}, %LXical.RemoteControl.Completion.Candidate.Module{full_name: "Ecto.Adapters", metadata: %{}, name: "Adapters", summary: ""}, %LXical.RemoteControl.Completion.Candidate.Module{full_name: "Ecto.Application", metadata: %{hidden: true}, name: "Application", summary: ""}, %LXical.RemoteControl.Completion.Candidate.Behaviour{full_name: "Ecto.Association", metadata: %{hidden: true}, name: "Association", summary: ""}, %LXical.RemoteControl.Completion.Candidate.Exception{full_name: "Ecto.CastError", metadata: %{}, name: "CastError", summary: "Raised when a changeset can't cast a value.\n"}, %LXical.RemoteControl.Completion.Candidate.Exception{full_name: "Ecto.ChangeError", metadata: %{}, name: "ChangeError", summary: ""}, %LXical.RemoteControl.Completion.Candidate.Struct{full_name: "Ecto.Changeset", metadata: %{}, name: "Changeset", summary: "Changesets allow filtering, casting, validation and\ndefinition of constraints when manipulating structs."}, %LXical.RemoteControl.Completion.Candidate.Exception{full_name: "Ecto.ConstraintError", metadata: %{}, name: "ConstraintError", summary: ""}, %LXical.RemoteControl.Completion.Candidate.Struct{full_name: "Ecto.Embedded", metadata: %{}, name: "Embedded", summary: "The embedding struct for `embeds_one` and `embeds_many`."}, %LXical.RemoteControl.Completion.Candidate.Module{full_name: "Ecto.Enum", metadata: %{}, name: "Enum", summary: "A custom type that maps atoms to strings or integers."}, %LXical.RemoteControl.Completion.Candidate.Exception{full_name: "Ecto.InvalidChangesetError", metadata: %{}, name: "InvalidChangesetError", summary: "Raised when we cannot perform an action because the\nchangeset is invalid.\n"}, %LXical.RemoteControl.Completion.Candidate.Exception{full_name: "Ecto.InvalidURLError", metadata: %{}, name: "InvalidURLError", summary: ""}, %LXical.RemoteControl.Completion.Candidate.Behaviour{full_name: "Ecto.Migration", metadata: %{}, name: "Migration", summary: "Migrations are used to modify your database schema over time."}, %LXical.RemoteControl.Completion.Candidate.Exception{full_name: "Ecto.MigrationError", metadata: %{}, name: "MigrationError", summary: ""}, %LXical.RemoteControl.Completion.Candidate.Module{full_name: "Ecto.Migrator", metadata: %{}, name: "Migrator", summary: "Lower level API for managing migrations."}, %LXical.RemoteControl.Completion.Candidate.Module{full_name: "Ecto.MixProject", metadata: %{}, name: "MixProject", summary: ""}, %LXical.RemoteControl.Completion.Candidate.Struct{full_name: "Ecto.Multi", metadata: %{}, name: "Multi", summary: "`Ecto.Multi` is a data structure for grouping multiple Repo operations."}, %LXical.RemoteControl.Completion.Candidate.Exception{full_name: "Ecto.MultiplePrimaryKeyError", metadata: %{}, name: "MultiplePrimaryKeyError", summary: ""}, %LXical.RemoteControl.Completion.Candidate.Exception{full_name: "Ecto.MultipleResultsError", metadata: %{}, name: "MultipleResultsError", summary: ""}, %LXical.RemoteControl.Completion.Candidate.Exception{full_name: "Ecto.NoPrimaryKeyFieldError", metadata: %{}, name: "NoPrimaryKeyFieldError", summary: "Raised at runtime when an operation that requires a primary key is invoked\nwith a schema that does not define a primary key by using `@primary_key false`\n"}, %LXical.RemoteControl.Completion.Candidate.Exception{full_name: "Ecto.NoPrimaryKeyValueError", metadata: %{}, name: "NoPrimaryKeyValueError", summary: "Raised at runtime when an operation that requires a primary key is invoked\nwith a schema missing value for its primary key\n"}, %LXical.RemoteControl.Completion.Candidate.Exception{full_name: "Ecto.NoResultsError", metadata: %{}, name: "NoResultsError", summary: ""}, %LXical.RemoteControl.Completion.Candidate.Behaviour{full_name: "Ecto.ParameterizedType", metadata: %{}, name: "ParameterizedType", summary: "Parameterized types are Ecto types that can be customized per field."}, %LXical.RemoteControl.Completion.Candidate.Struct{full_name: "Ecto.Query", metadata: %{}, name: "Query", summary: "Provides the Query DSL."}, %LXical.RemoteControl.Completion.Candidate.Exception{full_name: "Ecto.QueryError", metadata: %{}, name: "QueryError", summary: "Raised at runtime when the query is invalid.\n"}, %LXical.RemoteControl.Completion.Candidate.Protocol{full_name: "Ecto.Queryable", metadata: %{}, name: "Queryable", summary: "Converts a data structure into an `Ecto.Query`.\n"}, %LXical.RemoteControl.Completion.Candidate.Behaviour{full_name: "Ecto.Repo", metadata: %{}, name: "Repo", summary: "Defines a repository."}, %LXical.RemoteControl.Completion.Candidate.Module{full_name: "Ecto.Schema", metadata: %{}, name: "Schema", summary: "An Ecto schema maps external data into Elixir structs."}, %LXical.RemoteControl.Completion.Candidate.Exception{full_name: "Ecto.StaleEntryError", metadata: %{}, name: "StaleEntryError", summary: ""}, %LXical.RemoteControl.Completion.Candidate.Struct{full_name: "Ecto.SubQuery", metadata: %{}, name: "SubQuery", summary: "A struct representing subqueries."}, %LXical.RemoteControl.Completion.Candidate.Exception{full_name: "Ecto.SubQueryError", metadata: %{}, name: "SubQueryError", summary: "Raised at runtime when a subquery is invalid.\n"}, %LXical.RemoteControl.Completion.Candidate.Behaviour{full_name: "Ecto.Type", metadata: %{}, name: "Type", summary: "Defines functions and the `Ecto.Type` behaviour for implementing\nbasic custom types."}, %LXical.RemoteControl.Completion.Candidate.Module{full_name: "Ecto.UUID", metadata: %{}, name: "UUID", summary: "An Ecto type for UUID strings.\n"}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["atom"], arity: 1, name: "__info__", origin: "Ecto", type: :function, visibility: :public, spec: "@spec __info__(:attributes) :: keyword()\n@spec __info__(:compile) :: [term()]\n@spec __info__(:functions) :: [{atom, non_neg_integer}]\n@spec __info__(:macros) :: [{atom, non_neg_integer}]\n@spec __info__(:md5) :: binary()\n@spec __info__(:module) :: module()", summary: "Built-in function", metadata: %{builtin: true}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["struct_or_structs", "assocs"], arity: 2, name: "assoc", origin: "Ecto", type: :function, visibility: :public, spec: "", summary: "Builds a query for the association in the given struct or structs.", metadata: %{defaults: 1}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["struct_or_structs", "assocs", "opts"], arity: 3, name: "assoc", origin: "Ecto", type: :function, visibility: :public, spec: "", summary: "Builds a query for the association in the given struct or structs.", metadata: %{defaults: 1}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["list"], arity: 1, name: "assoc_loaded?", origin: "Ecto", type: :function, visibility: :public, spec: "", summary: "Checks if an association is loaded.", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["struct", "assoc"], arity: 2, name: "build_assoc", origin: "Ecto", type: :function, visibility: :public, spec: "", summary: "Builds a struct from the given `assoc` in `struct`.", metadata: %{defaults: 1}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["struct", "assoc", "attributes"], arity: 3, name: "build_assoc", origin: "Ecto", type: :function, visibility: :public, spec: "", summary: "Builds a struct from the given `assoc` in `struct`.", metadata: %{defaults: 1}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["data", "format"], arity: 2, name: "embedded_dump", origin: "Ecto", type: :function, visibility: :public, spec: "@spec embedded_dump(Ecto.Schema.t(), format :: atom()) :: map()", summary: "Dumps the given struct defined by an embedded schema.", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["schema_or_types", "data", "format"], arity: 3, name: "embed (truncated)
19:00:40.959 [info] Emitting completions: [#Protocol.Types.Completion.Item<[label: "Adapter", kind: :module, detail: "Specifies the minimal API required from adapters.\n", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/Users/zoedsoupe/dev/andromeda/andromeda-fie/test/support/data_case.ex", version: 12, dirty?: true, lines: %Lines<"defmodule Andromeda.DataCase do..."(59 lines)>, ...>, edits: %LXical.Document.Edit{text: "Adapter", range: LxRange[<<39, 16>>...<<39, 16>>]}}, sort_text: "0001_Adapter"]>, #Protocol.Types.Completion.Item<[label: "Adapters", kind: :module, detail: "Ecto.Adapters", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/Users/zoedsoupe/dev/andromeda/andromeda-fie/test/support/data_case.ex", version: 12, dirty?: true, lines: %Lines<"defmodule Andromeda.DataCase do..."(59 lines)>, ...>, edits: %LXical.Document.Edit{text: "Adapters", range: LxRange[<<39, 16>>...<<39, 16>>]}}, sort_text: "0001_Adapters"]>, #Protocol.Types.Completion.Item<[label: "Application", kind: :module, detail: "Ecto.Application", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/Users/zoedsoupe/dev/andromeda/andromeda-fie/test/support/data_case.ex", version: 12, dirty?: true, lines: %Lines<"defmodule Andromeda.DataCase do..."(59 lines)>, ...>, edits: %LXical.Document.Edit{text: "Application", range: LxRange[<<39, 16>>...<<39, 16>>]}}, sort_text: "0001_Application"]>, #Protocol.Types.Completion.Item<[label: "Association", kind: :module, detail: "Ecto.Association", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/Users/zoedsoupe/dev/andromeda/andromeda-fie/test/support/data_case.ex", version: 12, dirty?: true, lines: %Lines<"defmodule Andromeda.DataCase do..."(59 lines)>, ...>, edits: %LXical.Document.Edit{text: "Association", range: LxRange[<<39, 16>>...<<39, 16>>]}}, sort_text: "0001_Association"]>, #Protocol.Types.Completion.Item<[label: "Changeset", kind: :module, detail: "Changesets allow filtering, casting, validation and\ndefinition of constraints when manipulating structs.", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/Users/zoedsoupe/dev/andromeda/andromeda-fie/test/support/data_case.ex", version: 12, dirty?: true, lines: %Lines<"defmodule Andromeda.DataCase do..."(59 lines)>, ...>, edits: %LXical.Document.Edit{text: "Changeset", range: LxRange[<<39, 16>>...<<39, 16>>]}}, sort_text: "0001_Changeset"]>, #Protocol.Types.Completion.Item<[label: "Embedded", kind: :module, detail: "The embedding struct for `embeds_one` and `embeds_many`.", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/Users/zoedsoupe/dev/andromeda/andromeda-fie/test/support/data_case.ex", version: 12, dirty?: true, lines: %Lines<"defmodule Andromeda.DataCase do..."(59 lines)>, ...>, edits: %LXical.Document.Edit{text: "Embedded", range: LxRange[<<39, 16>>...<<39, 16>>]}}, sort_text: "0001_Embedded"]>, #Protocol.Types.Completion.Item<[label: "Enum", kind: :module, detail: "A custom type that maps atoms to strings or integers.", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/Users/zoedsoupe/dev/andromeda/andromeda-fie/test/support/data_case.ex", version: 12, dirty?: true, lines: %Lines<"defmodule Andromeda.DataCase do..."(59 lines)>, ...>, edits: %LXical.Document.Edit{text: "Enum", range: LxRange[<<39, 16>>...<<39, 16>>]}}, sort_text: "0001_Enum"]>, #Protocol.Types.Completion.Item<[label: "Migration", kind: :module, detail: "Migrations are used to modify your database schema over time.", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/Users/zoedsoupe/dev/andromeda/andromeda-fie/test/support/data_case.ex", version: 12, dirty?: true, lines: %Lines<"defmodule Andromeda.DataCase do..."(59 lines)>, ...>, edits: %LXical.Document.Edit{text: "Migration", range: LxRange[<<39, 16>>...<<39, 16>>]}}, sort_text: "0001_Migration"]>, #Protocol.Types.Completion.Item<[label: "Migrator", kind: :module, detail: "Lower level API for managing migrations.", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/Users/zoedsoupe/dev/andromeda/andromeda-fie/test/support/data_case.ex", version: 12, dirty?: true, lines: %Lines<"defmodule Andromeda.DataCase do..."(59 lines)>, ...>, edits: %LXical.Document.Edit{text: "Migrator", range: LxRange[<<39, 16>>...<<39, 16>>]}}, sort_text: "0001_Migrator"]>, #Protocol.Types.Completion.Item<[label: "MixProject", kind: :module, detail: "Ecto.MixProject", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/Users/zoedsoupe/dev/andromeda/andromeda-fie/test/support/data_case.ex", version: 12, dirty?: true, lines: %Lines<"defmodule Andromeda.DataCase do..."(59 lines)>, ...>, edits: %LXical.Document.Edit{text: "MixProject", range: LxRange[<<39, 16>>...<<39, 16>>]}}, sort_text: "0001_MixProject"]>, #Protocol.Types.Completion.Item<[label: "Multi", kind: :module, detail: "`Ecto.Multi` is a data structure for grouping multiple Repo operations.", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/Users/zoedsoupe/dev/andromeda/andromeda-fie/test/support/data_case.ex", version: 12, dirty?: true, lines: %Lines<"defmodule Andromeda.DataCase do..."(59 lines)>, ...>, edits: %LXical.Document.Edit{text: "Multi", range: LxRange[<<39, 16>>...<<39, 16>>]}}, sort_text: "0001_Multi"]>, #Protocol.Types.Completion.Item<[label: "ParameterizedType", kind: :module, detail: "Parameterized types are Ecto types that can be customized per field.", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/Users/zoedsoupe/dev/andromeda/andromeda-fie/test/support/data_case.ex", version: 12, dirty?: true, lines: %Lines<"defmodule Andromeda.DataCase do..."(59 lines)>, ...>, edits: %LXical.Document.Edit{text: "ParameterizedType", range: LxRange[<<39, 16>>...<<39, 16>>]}}, sort_text: "0001_ParameterizedType"]>, #Protocol.Types.Completion.Item<[label: "Query", kind: :module, detail: "Provides the Query DSL.", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/Users/zoedsoupe/dev/andromeda/andromeda-fie/test/support/data_case.ex", version: 12, dirty?: true, lines: %Lines<"defmodule Andromeda.DataCase do..."(59 lines)>, ...>, edits: %LXical.Document.Edit{text: "Query", range: LxRange[<<39, 16>>...<<39, 16>>]}}, sort_text: "0001_Query"]>, #Protocol.Types.Completion.Item<[label: "Queryable", kind: :module, detail: "Converts a data structure into an `Ecto.Query`.\n", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/Users/zoedsoupe/dev/andromeda/andromeda-fie/test/support/data_case.ex", version: 12, dirty?: true, lines: %Lines<"defmodule Andromeda.DataCase do..."(59 lines)>, ...>, edits: %LXical.Document.Edit{text: "Queryable", range: LxRange[<<39, 16>>...<<39, 16>>]}}, sort_text: "0001_Queryable"]>, #Protocol.Types.Completion.Item<[label: "Repo", kind: :module, detail: "Defines a repository.", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/Users/zoedsoupe/dev/andromeda/andromeda-fie/test/support/data_case.ex", version: 12, dirty?: true, lines: %Lines<"defmodule Andromeda.DataCase do..."(59 lines)>, ...>, edits: %LXical.Document.Edit{text: "Repo", range: LxRange[<<39, 16>>...<<39, 16>>]}}, sort_text: "0001_Repo"]>, #Protocol.Types.Completion.Item<[label: "Schema", kind: :module, detail: "An Ecto schema maps external data into Elixir structs.", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/Users/zoedsoupe/dev/andromeda/andromeda-fie/test/support/data_case.ex", version: 12, dirty?: true, lines: %Lines<"defmodule Andromeda.DataCase do..."(59 lines)>, ...>, edits: %LXical.Document.Edit{text: "Schema", range: LxRange[<<39, 16>>...<<39, 16>>]}}, sort_text: "0001_Schema"]>, #Protocol.Types.Completion.Item<[label: "SubQuery", kind: :module, detail: "A struct representing subqueries.", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/Users/zoedsoupe/dev/andromeda/andromeda-fie/test/support/data_case.ex", version: 12, dirty?: true, lines: %Lines<"defmodule Andromeda.DataCase do..."(59 lines)>, (truncated)
19:00:41.950 [info] Completion for LxPos<<39, 25>>
19:00:41.995 [info] Local completions are [%LXical.RemoteControl.Completion.Candidate.Module{full_name: "Ecto.Adapters.MyXQL", metadata: %{}, name: "MyXQL", summary: "Adapter module for MySQL."}, %LXical.RemoteControl.Completion.Candidate.Module{full_name: "Ecto.Adapters.Postgres", metadata: %{}, name: "Postgres", summary: "Adapter module for PostgreSQL."}, %LXical.RemoteControl.Completion.Candidate.Module{full_name: "Ecto.Adapters.SQL", metadata: %{}, name: "SQL", summary: "This application provides functionality for working with\nSQL databases in `Ecto`."}, %LXical.RemoteControl.Completion.Candidate.Module{full_name: "Ecto.Adapters.Tds", metadata: %{}, name: "Tds", summary: "Adapter module for MSSQL Server using the TDS protocol."}]
19:00:42.005 [info] Emitting completions: [#Protocol.Types.Completion.Item<[label: "MyXQL", kind: :module, detail: "Adapter module for MySQL.", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/Users/zoedsoupe/dev/andromeda/andromeda-fie/test/support/data_case.ex", version: 22, dirty?: true, lines: %Lines<"defmodule Andromeda.DataCase do..."(59 lines)>, ...>, edits: %LXical.Document.Edit{text: "MyXQL", range: LxRange[<<39, 25>>...<<39, 25>>]}}, sort_text: "0001_MyXQL"]>, #Protocol.Types.Completion.Item<[label: "Postgres", kind: :module, detail: "Adapter module for PostgreSQL.", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/Users/zoedsoupe/dev/andromeda/andromeda-fie/test/support/data_case.ex", version: 22, dirty?: true, lines: %Lines<"defmodule Andromeda.DataCase do..."(59 lines)>, ...>, edits: %LXical.Document.Edit{text: "Postgres", range: LxRange[<<39, 25>>...<<39, 25>>]}}, sort_text: "0001_Postgres"]>, #Protocol.Types.Completion.Item<[label: "SQL", kind: :module, detail: "This application provides functionality for working with\nSQL databases in `Ecto`.", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/Users/zoedsoupe/dev/andromeda/andromeda-fie/test/support/data_case.ex", version: 22, dirty?: true, lines: %Lines<"defmodule Andromeda.DataCase do..."(59 lines)>, ...>, edits: %LXical.Document.Edit{text: "SQL", range: LxRange[<<39, 25>>...<<39, 25>>]}}, sort_text: "0001_SQL"]>, #Protocol.Types.Completion.Item<[label: "Tds", kind: :module, detail: "Adapter module for MSSQL Server using the TDS protocol.", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/Users/zoedsoupe/dev/andromeda/andromeda-fie/test/support/data_case.ex", version: 22, dirty?: true, lines: %Lines<"defmodule Andromeda.DataCase do..."(59 lines)>, ...>, edits: %LXical.Document.Edit{text: "Tds", range: LxRange[<<39, 25>>...<<39, 25>>]}}, sort_text: "0001_Tds"]>]
19:00:45.266 [info] Completion for LxPos<<39, 29>>
19:00:45.351 [info] Local completions are [%LXical.RemoteControl.Completion.Candidate.Module{full_name: "Ecto.Adapters.SQL.Application", metadata: %{hidden: true}, name: "Application", summary: ""}, %LXical.RemoteControl.Completion.Candidate.Behaviour{full_name: "Ecto.Adapters.SQL.Connection", metadata: %{}, name: "Connection", summary: "Specifies the behaviour to be implemented by all SQL connections.\n"}, %LXical.RemoteControl.Completion.Candidate.Module{full_name: "Ecto.Adapters.SQL.Sandbox", metadata: %{}, name: "Sandbox", summary: "A pool for concurrent transactional tests."}, %LXical.RemoteControl.Completion.Candidate.Struct{full_name: "Ecto.Adapters.SQL.Stream", metadata: %{hidden: true}, name: "Stream", summary: ""}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["driver", "env"], arity: 2, name: "__before_compile__", origin: "Ecto.Adapters.SQL", type: :function, visibility: :public, spec: "", summary: "", metadata: %{hidden: true}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["atom"], arity: 1, name: "__info__", origin: "Ecto.Adapters.SQL", type: :function, visibility: :public, spec: "@spec __info__(:attributes) :: keyword()\n@spec __info__(:compile) :: [term()]\n@spec __info__(:functions) :: [{atom, non_neg_integer}]\n@spec __info__(:macros) :: [{atom, non_neg_integer}]\n@spec __info__(:md5) :: binary()\n@spec __info__(:module) :: module()", summary: "Built-in function", metadata: %{builtin: true}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["adapter_meta"], arity: 1, name: "checked_out?", origin: "Ecto.Adapters.SQL", type: :function, visibility: :public, spec: "", summary: "", metadata: %{hidden: true}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["adapter_meta", "opts", "callback"], arity: 3, name: "checkout", origin: "Ecto.Adapters.SQL", type: :function, visibility: :public, spec: "", summary: "", metadata: %{hidden: true}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["repo", "interval"], arity: 2, name: "disconnect_all", origin: "Ecto.Adapters.SQL", type: :function, visibility: :public, spec: "@spec disconnect_all(\n  pid() | Ecto.Repo.t() | Ecto.Adapter.adapter_meta(),\n  non_neg_integer(),\n  opts :: Keyword.t()\n) :: :ok", summary: "Forces all connections in the repo pool to disconnect within the given interval.", metadata: %{defaults: 1}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["repo", "interval", "opts"], arity: 3, name: "disconnect_all", origin: "Ecto.Adapters.SQL", type: :function, visibility: :public, spec: "@spec disconnect_all(\n  pid() | Ecto.Repo.t() | Ecto.Adapter.adapter_meta(),\n  non_neg_integer(),\n  opts :: Keyword.t()\n) :: :ok", summary: "Forces all connections in the repo pool to disconnect within the given interval.", metadata: %{defaults: 1}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["driver", "config", "type"], arity: 3, name: "ensure_all_started", origin: "Ecto.Adapters.SQL", type: :function, visibility: :public, spec: "", summary: "", metadata: %{hidden: true}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["prepare", "adapter_meta", "query_meta", "prepared", "params", "opts"], arity: 6, name: "execute", origin: "Ecto.Adapters.SQL", type: :function, visibility: :public, spec: "", summary: "", metadata: %{hidden: true}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["meta", "conn", "definition", "opts"], arity: 4, name: "execute_ddl", origin: "Ecto.Adapters.SQL", type: :function, visibility: :public, spec: "", summary: "", metadata: %{hidden: true}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["repo", "operation", "queryable"], arity: 3, name: "explain", origin: "Ecto.Adapters.SQL", type: :function, visibility: :public, spec: "@spec explain(\n  pid() | Ecto.Repo.t() | Ecto.Adapter.adapter_meta(),\n  :all | :update_all | :delete_all,\n  Ecto.Queryable.t(),\n  opts :: Keyword.t()\n) :: String.t() | Exception.t() | [map()]", summary: "Executes an EXPLAIN statement or similar for the given query according to its kind and the\nadapter in the given repository.", metadata: %{defaults: 1}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["repo", "operation", "queryable", "opts"], arity: 4, name: "explain", origin: "Ecto.Adapters.SQL", type: :function, visibility: :public, spec: "@spec explain(\n  pid() | Ecto.Repo.t() | Ecto.Adapter.adapter_meta(),\n  :all | :update_all | :delete_all,\n  Ecto.Queryable.t(),\n  opts :: Keyword.t()\n) :: String.t() | Exception.t() | [map()]", summary: "Executes an EXPLAIN statement or similar for the given query according to its kind and the\nadapter in the given repository.", metadata: %{defaults: 1}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["result"], arity: 1, name: "format_table", origin: "Ecto.Adapters.SQL", type: :function, visibility: :public, spec: "@spec format_table(%{:columns => [String.t()] | nil, :rows => [term()] | nil, optional(atom()) => any()}) ::\n  String.t()", summary: "", metadata: %{hidden: true}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["map"], arity: 1, name: "in_transaction?", origin: "Ecto.Adapters.SQL", type: :function, visibility: :public, spec: "", summary: "", metadata: %{hidden: true}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["connection", "driver", "config"], arity: 3, name: "init", origin: "Ecto.Adapters.SQL", type: :function, visibility: :public, spec: "", summary: "", metadata: %{hidden: true}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["adapter_meta", "schema_meta", "conn", "header", "rows", "on_conflict", "returning", "placeholders", "opts"], arity: 9, name: "insert_all", origin: "Ecto.Adapters.SQL", type: :function, visibility: :public, spec: "", summary: "", metadata: %{hidden: true}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["adapter_meta", "statement", "params", "opts"], arity: 4, name: "into", origin: "Ecto.Adapters.SQL", type: :function, visibility: :public, spec: "", summary: "", metadata: %{hidden: true}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: [], arity: 0, name: "module_info", origin: "Ecto.Adapters.SQL", type: :function, visibility: :public, spec: "@spec module_info :: [{:module | :attributes | :compile | :exports | :md5 | :native, term}]", summary: "Built-in function", metadata: %{builtin: true}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["key"], arity: 1, name: "module_info", origin: "Ecto.Adapters.SQL", type: :function, visibility: :public, spec: "@spec module_info(:module) :: atom\n@spec module_info(:attributes | :compile) :: [{atom, term}]\n@spec module_info(:md5) :: binary\n@spec module_info(:exports | :functions | :nifs) :: [{atom, non_neg_integer}]\n@spec module_info(:native) :: boolean", summary: "Built-in function", metadata: %{builtin: true}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["repo", "sql"], arity: 2, name: "query", origin: "Ecto.Adapters.SQL", type: :function, visibility: :public, spec: "@spec query(pid() | Ecto.Repo.t() | Ecto.Adapter.adapter_meta(), iodata(), [term()], Keyword.t()) ::\n  {:ok, query_result()} | {:error, Exception.t()}", summary: "Runs a custom SQL query on the given repo.", metadata: %{defaults: 2}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["repo", "sql", "params"], arity: 3, name: "query", origin: "Ecto.Adapters.SQL", type: :function, visibility: :public, spec: "@spec query(pid() | Ecto.Repo.t() | Ecto.Adapter.adapter_meta(), iodata(), [term()], Keyword.t()) ::\n  {:ok, query_result()} | {:error, Exception.t()}", summary: "Runs a custom SQL query on the given repo.", metadata: %{defaults: 2}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["repo", "sql", "params", "opts"], arity: 4, name: "query", origin: "Ecto.Adapters.SQL", type: :function, visibility: :public, spec: "@spec (truncated)
19:00:45.365 [info] Emitting completions: [#Protocol.Types.Completion.Item<[label: "Application", kind: :module, detail: "Ecto.Adapters.SQL.Application", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/Users/zoedsoupe/dev/andromeda/andromeda-fie/test/support/data_case.ex", version: 31, dirty?: true, lines: %Lines<"defmodule Andromeda.DataCase do..."(59 lines)>, ...>, edits: %LXical.Document.Edit{text: "Application", range: LxRange[<<39, 29>>...<<39, 29>>]}}, sort_text: "0001_Application"]>, #Protocol.Types.Completion.Item<[label: "Connection", kind: :module, detail: "Specifies the behaviour to be implemented by all SQL connections.\n", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/Users/zoedsoupe/dev/andromeda/andromeda-fie/test/support/data_case.ex", version: 31, dirty?: true, lines: %Lines<"defmodule Andromeda.DataCase do..."(59 lines)>, ...>, edits: %LXical.Document.Edit{text: "Connection", range: LxRange[<<39, 29>>...<<39, 29>>]}}, sort_text: "0001_Connection"]>, #Protocol.Types.Completion.Item<[label: "Sandbox", kind: :module, detail: "A pool for concurrent transactional tests.", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/Users/zoedsoupe/dev/andromeda/andromeda-fie/test/support/data_case.ex", version: 31, dirty?: true, lines: %Lines<"defmodule Andromeda.DataCase do..."(59 lines)>, ...>, edits: %LXical.Document.Edit{text: "Sandbox", range: LxRange[<<39, 29>>...<<39, 29>>]}}, sort_text: "0001_Sandbox"]>, #Protocol.Types.Completion.Item<[label: "Stream", kind: :module, detail: "Ecto.Adapters.SQL.Stream", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/Users/zoedsoupe/dev/andromeda/andromeda-fie/test/support/data_case.ex", version: 31, dirty?: true, lines: %Lines<"defmodule Andromeda.DataCase do..."(59 lines)>, ...>, edits: %LXical.Document.Edit{text: "Stream", range: LxRange[<<39, 29>>...<<39, 29>>]}}, sort_text: "0001_Stream"]>]
19:00:57.170 [error] Shutting down
19:00:57.170 [error] Received workspace/didChangeWatchedFiles after shutdown. Ignoring
19:00:57.174 [error] Child LXical.Server.Transport.StdIO of Supervisor LXical.Server.Supervisor terminated
** (exit) normal
Pid: #PID<0.1465.0>
Start Call: LXical.Server.Transport.StdIO.start_link(:standard_io, &LXical.Server.protocol_message/1)
Restart: :permanent
Shutdown: 5000
Type: :worker
19:00:57.174 [info] Child LXical.Server.Transport.StdIO of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1489.0>
Start Call: LXical.Server.Transport.StdIO.start_link(:standard_io, &LXical.Server.protocol_message/1)
Restart: :permanent
Shutdown: 5000
Type: :worker
